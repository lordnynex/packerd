package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*Health health

swagger:model health
*/
type Health struct {

	/* diskpercentfull

	Required: true
	*/
	Diskpercentfull *int64 `json:"diskpercentfull"`

	/* goroutines
	 */
	Goroutines uint64 `json:"goroutines,omitempty"`

	/* status

	Required: true
	*/
	Status *string `json:"status"`
}

// Validate validates this health
func (m *Health) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDiskpercentfull(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Health) validateDiskpercentfull(formats strfmt.Registry) error {

	if err := validate.Required("diskpercentfull", "body", m.Diskpercentfull); err != nil {
		return err
	}

	return nil
}

func (m *Health) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}
