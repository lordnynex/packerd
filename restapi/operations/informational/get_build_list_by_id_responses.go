package informational

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/tompscanlan/packerd/models"
)

/*GetBuildListByIDOK returns a build status

swagger:response getBuildListByIdOK
*/
type GetBuildListByIDOK struct {

	// In: body
	Payload *models.Buildrequest `json:"body,omitempty"`
}

// NewGetBuildListByIDOK creates GetBuildListByIDOK with default headers values
func NewGetBuildListByIDOK() *GetBuildListByIDOK {
	return &GetBuildListByIDOK{}
}

// WithPayload adds the payload to the get build list by Id o k response
func (o *GetBuildListByIDOK) WithPayload(payload *models.Buildrequest) *GetBuildListByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build list by Id o k response
func (o *GetBuildListByIDOK) SetPayload(payload *models.Buildrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildListByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetBuildListByIDBadRequest generic error response

swagger:response getBuildListByIdBadRequest
*/
type GetBuildListByIDBadRequest struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBuildListByIDBadRequest creates GetBuildListByIDBadRequest with default headers values
func NewGetBuildListByIDBadRequest() *GetBuildListByIDBadRequest {
	return &GetBuildListByIDBadRequest{}
}

// WithPayload adds the payload to the get build list by Id bad request response
func (o *GetBuildListByIDBadRequest) WithPayload(payload *models.Error) *GetBuildListByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build list by Id bad request response
func (o *GetBuildListByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildListByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
