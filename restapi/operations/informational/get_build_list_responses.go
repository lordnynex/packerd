package informational

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/tompscanlan/packerd/models"
)

/*GetBuildListOK list of links to the all build requests

swagger:response getBuildListOK
*/
type GetBuildListOK struct {

	// In: body
	Payload []*models.Link `json:"body,omitempty"`
}

// NewGetBuildListOK creates GetBuildListOK with default headers values
func NewGetBuildListOK() *GetBuildListOK {
	return &GetBuildListOK{}
}

// WithPayload adds the payload to the get build list o k response
func (o *GetBuildListOK) WithPayload(payload []*models.Link) *GetBuildListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build list o k response
func (o *GetBuildListOK) SetPayload(payload []*models.Link) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetBuildListNoContent no buildrequests exist

swagger:response getBuildListNoContent
*/
type GetBuildListNoContent struct {
}

// NewGetBuildListNoContent creates GetBuildListNoContent with default headers values
func NewGetBuildListNoContent() *GetBuildListNoContent {
	return &GetBuildListNoContent{}
}

// WriteResponse to the client
func (o *GetBuildListNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

/*GetBuildListBadRequest generic error response

swagger:response getBuildListBadRequest
*/
type GetBuildListBadRequest struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBuildListBadRequest creates GetBuildListBadRequest with default headers values
func NewGetBuildListBadRequest() *GetBuildListBadRequest {
	return &GetBuildListBadRequest{}
}

// WithPayload adds the payload to the get build list bad request response
func (o *GetBuildListBadRequest) WithPayload(payload *models.Error) *GetBuildListBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build list bad request response
func (o *GetBuildListBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildListBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
