package informational

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/tompscanlan/packerd/models"
)

/*GetBuildStageByNameOK detail of specific stage

swagger:response getBuildStageByNameOK
*/
type GetBuildStageByNameOK struct {

	// In: body
	Payload *models.Buildstage `json:"body,omitempty"`
}

// NewGetBuildStageByNameOK creates GetBuildStageByNameOK with default headers values
func NewGetBuildStageByNameOK() *GetBuildStageByNameOK {
	return &GetBuildStageByNameOK{}
}

// WithPayload adds the payload to the get build stage by name o k response
func (o *GetBuildStageByNameOK) WithPayload(payload *models.Buildstage) *GetBuildStageByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build stage by name o k response
func (o *GetBuildStageByNameOK) SetPayload(payload *models.Buildstage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildStageByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetBuildStageByNameBadRequest generic error response

swagger:response getBuildStageByNameBadRequest
*/
type GetBuildStageByNameBadRequest struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBuildStageByNameBadRequest creates GetBuildStageByNameBadRequest with default headers values
func NewGetBuildStageByNameBadRequest() *GetBuildStageByNameBadRequest {
	return &GetBuildStageByNameBadRequest{}
}

// WithPayload adds the payload to the get build stage by name bad request response
func (o *GetBuildStageByNameBadRequest) WithPayload(payload *models.Error) *GetBuildStageByNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get build stage by name bad request response
func (o *GetBuildStageByNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBuildStageByNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
