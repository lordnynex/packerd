package informational

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBuildListByIDHandlerFunc turns a function with the right signature into a get build list by Id handler
type GetBuildListByIDHandlerFunc func(GetBuildListByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBuildListByIDHandlerFunc) Handle(params GetBuildListByIDParams) middleware.Responder {
	return fn(params)
}

// GetBuildListByIDHandler interface for that can handle valid get build list by Id params
type GetBuildListByIDHandler interface {
	Handle(GetBuildListByIDParams) middleware.Responder
}

// NewGetBuildListByID creates a new http.Handler for the get build list by Id operation
func NewGetBuildListByID(ctx *middleware.Context, handler GetBuildListByIDHandler) *GetBuildListByID {
	return &GetBuildListByID{Context: ctx, Handler: handler}
}

/*GetBuildListByID swagger:route GET /build/queue/{id} informational getBuildListById

get a specific build request

*/
type GetBuildListByID struct {
	Context *middleware.Context
	Handler GetBuildListByIDHandler
}

func (o *GetBuildListByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBuildListByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
