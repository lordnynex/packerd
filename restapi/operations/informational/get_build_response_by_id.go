package informational

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBuildResponseByIDHandlerFunc turns a function with the right signature into a get build response by Id handler
type GetBuildResponseByIDHandlerFunc func(GetBuildResponseByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBuildResponseByIDHandlerFunc) Handle(params GetBuildResponseByIDParams) middleware.Responder {
	return fn(params)
}

// GetBuildResponseByIDHandler interface for that can handle valid get build response by Id params
type GetBuildResponseByIDHandler interface {
	Handle(GetBuildResponseByIDParams) middleware.Responder
}

// NewGetBuildResponseByID creates a new http.Handler for the get build response by Id operation
func NewGetBuildResponseByID(ctx *middleware.Context, handler GetBuildResponseByIDHandler) *GetBuildResponseByID {
	return &GetBuildResponseByID{Context: ctx, Handler: handler}
}

/*GetBuildResponseByID swagger:route GET /build/responses/{id} informational getBuildResponseById

get all responses for this build id

*/
type GetBuildResponseByID struct {
	Context *middleware.Context
	Handler GetBuildResponseByIDHandler
}

func (o *GetBuildResponseByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBuildResponseByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
