package command

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RunBuildHandlerFunc turns a function with the right signature into a run build handler
type RunBuildHandlerFunc func(RunBuildParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RunBuildHandlerFunc) Handle(params RunBuildParams) middleware.Responder {
	return fn(params)
}

// RunBuildHandler interface for that can handle valid run build params
type RunBuildHandler interface {
	Handle(RunBuildParams) middleware.Responder
}

// NewRunBuild creates a new http.Handler for the run build operation
func NewRunBuild(ctx *middleware.Context, handler RunBuildHandler) *RunBuild {
	return &RunBuild{Context: ctx, Handler: handler}
}

/*RunBuild swagger:route POST /build command runBuild

trigger a packer build for a particular git repository

*/
type RunBuild struct {
	Context *middleware.Context
	Handler RunBuildHandler
}

func (o *RunBuild) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewRunBuildParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
